name: Build and Release Executables

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          python -c "import os; import subprocess; \
                   (os.path.isfile('requirements.txt') and subprocess.check_call(['pip','install','-r','requirements.txt']))"


      - name: Build executable
        run: |
          pyinstaller --onefile main.py --add-data "audit_modules:audit_modules"
          
      # Linux / macOS
      - name: Upload artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: main-artifacts-${{ matrix.os }}
          path: |
            dist/main
            audit_config.json
            audit_modules/**
      
      # Windows
      - name: Upload artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: main-artifacts-${{ matrix.os }}
          path: |
            dist/main.exe
            audit_config.json
            audit_modules/**



        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build executable
        run: |
          pyinstaller --onefile --clean --log-level=DEBUG main.py

