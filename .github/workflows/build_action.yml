name: Build and Release Executables

on:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          python -c "import os; import subprocess; \
                   (os.path.isfile('requirements.txt') and subprocess.check_call(['pip','install','-r','requirements.txt']))"

      - name: Build executable
        run: |
          pyinstaller --onefile main.py --add-data "audit_modules:audit_modules"

      # Linux/macOS
      - name: Move executable out of dist (Linux/macOS)
        if: runner.os != 'Windows'
        run: mv dist/main main

      # Windows
      - name: Move executable out of dist (Windows)
        if: runner.os == 'Windows'
        run: move dist\main.exe main.exe
        shell: powershell

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: main-artifacts-${{ matrix.os }}
          path: |
            main*
            audit_config.json
            audit_modules/**

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release tag
        id: vars
        run: echo "TAG=release-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          draft: false
          prerelease: false
          files: |
            artifacts/**/main*
            artifacts/**/audit_config.json
            artifacts/**/audit_modules/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
